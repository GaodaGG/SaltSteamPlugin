plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    id 'org.jetbrains.kotlin.kapt' version '2.0.21'
}

group = 'com.gg.SaltSteamPlugin'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'net.jthink:jaudiotagger:3.0.1'
    implementation "com.code-disaster.steamworks4j:steamworks4j:1.9.0"
    compileOnly "com.github.Moriafly:spw-workshop-api:0.1.0-dev14"
    kapt "com.github.Moriafly:spw-workshop-api:0.1.0-dev14"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

def pluginClass = "com.gg.SaltSteamPlugin.MainPlugin"
def pluginId = "Steam 丰富状态扩展"
def pluginVersion = "2.3.0"
def pluginProvider = "GaodaGG"

tasks.named("jar") {
    destinationDirectory = file(System.getenv("APPDATA") + "/Salt Player for Windows/workshop/plugins/")
    archiveFileName = "plugin-${pluginId}-${pluginVersion}.jar"

    manifest {
        attributes["Plugin-Class"] = pluginClass
        attributes["Plugin-Id"] = pluginId
        attributes["Plugin-Version"] = pluginVersion
        attributes["Plugin-Provider"] = pluginProvider
        attributes["Plugin-Open-Source-Url"] = "https://github.com/GaodaGG/SaltSteamPlugin"
        attributes["Plugin-Has-Config"] = true
    }
}

tasks.register("plugin", Jar) {
    destinationDirectory = file(System.getenv("APPDATA") + "/Salt Player for Windows/workshop/plugins/")
    archiveFileName = "plugin-${pluginId}-${pluginVersion}.zip"
    archiveBaseName.set("plugin-" + pluginId + "-" + pluginVersion)

    into("classes") {
        with(tasks.named("jar").get())
    }
    dependsOn(configurations.runtimeClasspath)
    into("lib") {
        from({
            configurations.runtimeClasspath
                    .filter { it.name.endsWith("jar") }
        })
    }
    archiveExtension = 'zip'
}